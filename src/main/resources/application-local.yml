spring:
  config:
    activate:
      on-profile: local # 로컬 환경 활성화

  application:
    name: demo

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  datasource:
    url: ${DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  cache:
    type: redis
    redis:
      time-to-live: 30m

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"  # 로컬 환경에 맞는 redirect-uri
            scope: [nickname, profile_image, gender]
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

jwt:
  secret: ${JWT_SECRET}
  access-token-validity-in-seconds: ${JWT_ACCESS_VALIDITY}
  refresh-token-validity-in-seconds: ${JWT_REFRESH_VALIDITY}

springdoc:
  swagger-ui:
    persistAuthorization: false
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs

# CORS 설정 (로컬 개발에 필요한 Origin 추가)
cors:
  allowed-origins:
    - "http://localhost:3000"
    - "http://127.0.0.1:3000"
    - "http://localhost:8080"
    - "http://127.0.0.1:8080"

logging:
  level:
    org.springframework.security: INFO
